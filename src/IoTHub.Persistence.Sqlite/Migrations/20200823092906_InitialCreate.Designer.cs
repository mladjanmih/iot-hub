// <auto-generated />
using IoTHub.Persistence.Sqlite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IoTHub.Persistence.Sqlite.Migrations
{
    [DbContext(typeof(SensorContext))]
    [Migration("20200823092906_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("IoTHub.Persistence.Models.Sensor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HostId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HostSensorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("UnitName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("Sensor");
                });

            modelBuilder.Entity("IoTHub.Persistence.Models.SensorHost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("NetworkId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SensorHost");
                });

            modelBuilder.Entity("IoTHub.Persistence.Models.Sensor", b =>
                {
                    b.HasOne("IoTHub.Persistence.Models.SensorHost", "Host")
                        .WithMany("Sensors")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
